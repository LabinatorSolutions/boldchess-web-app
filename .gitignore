# ============================
# Google Style .gitignore for BoldChess Web App
# Following Google's best practices for clean repository management
# ============================

# ============================
# Node.js and JavaScript
# ============================
# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Build outputs
dist/
build/
out/
coverage/
.nyc_output/

# Package manager files
.npm/
.yarn/cache/
.yarn/unplugged/
.yarn/build-state.yml
.yarn/install-state.gz

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# ESLint cache
.eslintcache

# ============================
# Environment and Configuration
# ============================
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.*.local

# ============================
# Docker and Containers (Local Development Only)
# ============================
# All Docker-related files (keep Docker setup local only)
Dockerfile*
docker-compose*.yml
.dockerignore
nginx.conf
healthcheck.js

# Docker volumes and runtime data
docker-data/
volumes/

# Docker build context and cache
.docker/

# ============================
# IDE and Editor Files
# ============================
# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# JetBrains IDEs (IntelliJ, WebStorm, etc.)
.idea/

# Vim
*.swp
*.swo
.*.swp
.*.swo

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc

# Sublime Text
*.sublime-project
*.sublime-workspace

# ============================
# Operating System Files
# ============================
# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon?
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
Desktop.ini
$RECYCLE.BIN/
*.lnk

# Linux
*~

# ============================
# Testing and Quality Assurance
# ============================
# Test coverage reports
coverage/
.coverage
htmlcov/
.nyc_output/

# Test frameworks
.jest/
.pytest_cache/
.tox/
.nox/

# Test outputs
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/

# ============================
# Logs and Runtime Data
# ============================
logs/
*.log
pids/
*.pid
*.seed
*.pid.lock

# Runtime data
.grunt

# ============================
# Security and Sensitive Data
# ============================
# SSL certificates and keys
*.pem
*.key
*.crt
*.csr
ssl/
certs/

# API keys and secrets
secrets/
.secrets/
config/secrets/

# ============================
# Temporary and Cache Files
# ============================
tmp/
temp/
.tmp/
.cache/
.parcel-cache/

# ============================
# Database Files
# ============================
*.sqlite
*.sqlite3
*.db
data/
backups/

# ============================
# Compiled Files (Language Agnostic)
# ============================
*.o
*.so
*.dylib
*.dll
*.exe
*.class

# Python (if used for tooling)
__pycache__/
*.py[cod]
*$py.class

# ============================
# Large Media Files
# ============================
# Archive files
*.zip
*.tar.gz
*.rar
*.7z

# Video files (exclude from repo, use CDN/external storage)
*.mp4
*.avi
*.mkv
*.mov
*.wmv
*.flv
*.webm
*.m4v

# Large image files (keep optimized web versions only)
*.tiff
*.bmp
*.raw
*.psd

# Audio files
*.mp3
*.wav
*.flac
*.aac

# ============================
# Backup and Temporary Files
# ============================
*.bak
*.backup
*.old
*.orig

# ============================
# Build and Development Tools (Local Only)
# ============================
# Keep build tools and automation local to each developer
Makefile

# ============================
# Important Files to Include
# ============================
# Explicitly include essential configuration files
!.github/
!.gitattributes

# ============================
# Package Manager Lock Files
# ============================
# Note: Choose one package manager and commit its lock file
# Currently using npm, so package-lock.json is tracked
# If switching to yarn: uncomment next line
# yarn.lock
# If switching to pnpm: uncomment next line  
# pnpm-lock.yaml
